# -*- coding: utf-8 -*-
"""bosch.ipynb másolata

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1x46Uz2eyfdPcfFptCdbCrHC7JOG0YVUu
"""

import pandas as pd
import matplotlib.pyplot as plt

"""416 rövidítés"""

df416 = pd.read_csv("Group_416.csv")
# oszlopnev rovidites update

df416.columns = df416.columns.str.replace(
    '_g_ods_OneDrivingSW_perHv_HV_PerPmeRunnable_PerPmeRunnable_m_pmePort_out_local.TChangeableMemPool._._._m_arrayPool._1_._elem._',
    '')
df416.head()

"""349 rövidítés"""

df349 = pd.read_csv("Group_349.csv")

df349.columns = df349.columns.str.replace(
    '_g_Infrastructure_CCR_NET_NetRunnablesClass_m_rteInputData_out_local.TChangeableMemPool._._._m_arrayPool._0_._elem._m_',
    '')
df349.head()

# object detection elso valtas 0. objektumnak

obj0 = df349[[df349.columns[32]]]

obj0dx = df349["camData._m_objects._m_value._0_._m_dx"]
obj0dy = df349["camData._m_objects._m_value._0_._m_dy"]
obj0vx = df349["camData._m_objects._m_value._0_._m_vx"]
obj0vy = df349["camData._m_objects._m_value._0_._m_vy"]


# elso objektum valtas
startingobj = obj0.loc[0][0]

for i in range(len(obj0)):

    if(obj0.loc[i][0] != startingobj):
        print(""+ str(i) +"-ediknel van az elso valtas")
        print(""+ str(obj0.loc[i][0])+"-re valt " + str(obj0.loc[i-1][0])+"-rol")
        break

lista=[]
for i in range(len(df349.columns)):
  if("camData" not in df349.columns[i]):
    #print(df349.columns[i])
    lista.append(df349.columns[i])
#print(lista)
df349cd=df349.drop(lista, axis=1)
df349cd.head()

lista=[]
for i in range(len(df349cd.columns)):
  if("_0_" not in df349cd.columns[i]):
    #print(df349.columns[i])
    lista.append(df349cd.columns[i])
#print(lista)
lista.remove("camData._m_cameraTimeStamp")
df349cd0=df349cd.drop(lista, axis=1)
df349cd0.head()

# for i in range(len(df349cd0.columns)):
#   if("m_d" in df349cd0.columns[i]):
#     df349cd0[df349cd0.columns[i]] = df349cd0[df349cd0.columns[i]]/128
#   if("_.m_v" in df349cd0.columns[i]):
#     df349cd0[df349cd0.columns[i]] = df349cd0[df349cd0.columns[i]]/256
# df349cd0.head(10)

df349cd0.plot(kind = "scatter", x = "camData._m_cameraTimeStamp", y = "camData._m_objects._m_value._0_._m_vx")

x = "camData._m_objects._m_value._0_._m_dx"
y = "camData._m_objects._m_value._0_._m_dy"
vy = "camData._m_objects._m_value._0_._m_vy"
import matplotlib.pyplot as plt
from matplotlib.patches import Rectangle
  
# create data
#x = [10,20,30,40,50]
#y = [30,30,30,30,30]
listax = []
listay = []
#plt.plot(x, y)
#plt.plot(x)

fig, ax = plt.subplots()

# amiket még kellene szűrni:
# meredekség lekérdezése

for i in range(10000):
  if not df349cd0[x][i] < -200 and not df349cd0[y][i] < -200 :
    if i % 10 == 0 and (df349cd0[vy][i] < 0):
      listax.append(df349cd0[x][i])
      listay.append(df349cd0[y][i])
      #plt.plot(listax)
      #plt.plot(listay)
    if i % 20 == 0 :
      ax.plot(listax, listay)
      #print(listax)
      #print(listay)
      listax = []
      listay = []

#a = [10,20,30,-40,50]
#b = [30,40,10,30,-30]

#plt.plot(a,b)

ax.add_patch(Rectangle((-0.3, 2.3), 2.3, 1.5))

ax.add_patch(Rectangle((-0.3, -0.8), 2.3, 1.5))

plt.show()


#print(df349cd0[x][i])

import matplotlib.pyplot as plt 
import numpy as np
from sklearn.linear_model import LinearRegression
import random

import matplotlib.pyplot as plt
from matplotlib.patches import Rectangle


x_values=[0.2,0.5]
y_values=[0.3,0.5]

fig, ax = plt.subplots()

i=0
for i in range(10):
    

    
    
    plt.xlim(-10,10)
    plt.ylim(-10,50)
    plt.scatter(x_values,y_values, color='black')
    
    xvalt=x_values[i+1]-x_values[i]
    yvalt=y_values[i+1]-y_values[i]
    
    x_values.append(x_values[i+1]+xvalt)
    y_values.append(y_values[i+1]+yvalt)
    
    plt.scatter(x_values,y_values, color='blue')
    
    if(x_values[i]>=0.3 and x_values[i]<=2 and y_values[i]>0.8 and y_values[i] < 2.3):
        print(x_values[i], y_values[i])
    
    
    
    plt.pause(0.001)
    i=i+1
    

 
#ax.add_patch(Rectangle((-0.3, 2.3), 2.3, 1.5))
#ax.add_patch(Rectangle((-0.3, -0.8), 2.3, 1.5)) 
    

    
plt.show()

obj0 = df349[[df349.columns[32]]]

obj0dx = df349[["camData._m_objects._m_value._0_._m_dx"]]
obj0dy = df349[["camData._m_objects._m_value._0_._m_dy"]]
obj0vx = df349[["camData._m_objects._m_value._0_._m_vx"]]
obj0vy = df349[["camData._m_objects._m_value._0_._m_vy"]]


# elso objektum valtas
startingobj = obj0.loc[0][0]

for i in range(len(obj0)):

    if(obj0.loc[i][0] != startingobj):
        print(""+ str(i) +"-ediknel van az elso valtas")
        print(""+ str(obj0.loc[i][0])+"-re valt " + str(obj0.loc[i-1][0])+"-rol")
        print(""+ str(obj0dx.loc[i][0])+" xd" + str(obj0dx.loc[i-1][0])+" xddd")
        xminusz2=obj0dx.loc[i-2][0]
        xminusz1=obj0dx.loc[i-1][0]
        yminusz2=obj0dy.loc[i-2][0]
        yminusz1=obj0dy.loc[i-1][0]
        break

# maga az xvalues assign
x_values = [xminusz2, xminusz1]
y_values = [yminusz2, yminusz1]

import matplotlib.pyplot as plt 
import numpy as np
from sklearn.linear_model import LinearRegression
import random
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib.patches import Rectangle

df349 = pd.read_csv("/Users/timeanemet/Desktop/Bosch/SW Challenge 2022 - dataset/PSA_ADAS_W3_FC_2022-09-01_14-49_0054.MF4/Group_349.csv", sep=',') # sep argumentummal megadhatjuk az elválasztó karaktert
df349.head()


df349.columns = df349.columns.str.replace(
    '_g_Infrastructure_CCR_NET_NetRunnablesClass_m_rteInputData_out_local.TChangeableMemPool._._._m_arrayPool._0_._elem._m_',
    '')



variable = 
variable=str(variable)

obj0 = df349[["camData._m_objects._m_value._"+variable+"_._m_objType"]]

obj0dx = df349[["camData._m_objects._m_value._"+variable+"_._m_dx"]]
obj0dy = df349[["camData._m_objects._m_value._"+variable+"_._m_dy"]]
obj0vx = df349[["camData._m_objects._m_value._"+variable+"_._m_vx"]]
obj0vy = df349[["camData._m_objects._m_value._"+variable+"_._m_vy"]]


# elso objektum valtas
startingobj = obj0.loc[0][0]

for i in range(len(obj0)):

    if(obj0.loc[i][0] != startingobj):
        print(""+ str(i) +"-ediknel van az elso valtas")
        print(""+ str(obj0.loc[i][0])+"-re valt " + str(obj0.loc[i-1][0])+"-rol")
        print(""+ str(obj0dx.loc[i][0])+" xd" + str(obj0dx.loc[i-1][0])+" xddd")
        xminusz2=obj0dx.loc[0][0]
        xminusz1=obj0dx.loc[i-1][0]
        yminusz2=obj0dy.loc[0][0]
        yminusz1=obj0dy.loc[i-1][0]
        break

x_values = [xminusz2, xminusz1]
y_values = [yminusz2, yminusz1]

fig, ax = plt.subplots()

i=1
for i in range(50):
    
    
    #plt.xlim(-1000,1000)
    #plt.ylim(-1000,5000)
    plt.scatter(x_values,y_values, color='black')
    
    print(x_values[i],x_values[i+1])
    
    xvalt=x_values[i+1]-x_values[i]
    yvalt=y_values[i+1]-y_values[i]
    
    x_values.append(x_values[i+1]+xvalt)
    y_values.append(y_values[i+1]+yvalt)
    
    plt.scatter(x_values,y_values, color='blue')
    
    if(x_values[i]>=0.3 and x_values[i]<=2 and y_values[i]>0.8 and y_values[i] < 2.3):
        print(x_values[i], y_values[i])
    
    
    
    plt.pause(0.001)
    i=i+1
    

 
#ax.add_patch(Rectangle((-0.3, 2.3), 2.3, 1.5))
#ax.add_patch(Rectangle((-0.3, -0.8), 2.3, 1.5)) 
    

    
plt.show()

import matplotlib.pyplot as plt 
import numpy as np
from sklearn.linear_model import LinearRegression
import random
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib.patches import Rectangle

df349 = pd.read_csv("/Users/timeanemet/Desktop/Bosch/SW Challenge 2022 - dataset/PSA_ADAS_W3_FC_2022-09-01_14-49_0054.MF4/Group_349.csv", sep=',') # sep argumentummal megadhatjuk az elválasztó karaktert
df349.head()


df349.columns = df349.columns.str.replace(
    '_g_Infrastructure_CCR_NET_NetRunnablesClass_m_rteInputData_out_local.TChangeableMemPool._._._m_arrayPool._0_._elem._m_',
    '')



#Melyik kamerát nézem

number = 0

while number != 15:


    variable = 1
    variable=str(variable)

    #Melyik oszlopot

    obj0 = df349[["camData._m_objects._m_value._"+variable+"_._m_objType"]]

    obj0dx = df349[["camData._m_objects._m_value._"+variable+"_._m_dx"]]
    obj0dy = df349[["camData._m_objects._m_value._"+variable+"_._m_dy"]]
    obj0vx = df349[["camData._m_objects._m_value._"+variable+"_._m_vx"]]
    obj0vy = df349[["camData._m_objects._m_value._"+variable+"_._m_vy"]]


    # elso objektum valtas
    object1 = 0
    myobjects=[object1]
    myobjecttipe=[obj0.loc[0][0]]

    startingobj = obj0.loc[object1][0]


    for i in range(len(obj0)):

        if(obj0.loc[i][0] != startingobj):
            myobjects.append(i)
            myobjecttipe.append(obj0.loc[i][0])
            print(""+ str(i) +"-ediknel van az elso valtas")
            print(""+ str(obj0.loc[i][0])+"-re valt " + str(obj0.loc[i-1][0])+"-rol")
            print(""+ str(obj0dx.loc[i][0])+" xd" + str(obj0dx.loc[i-1][0])+" xddd")
            xminusz2=obj0dx.loc[0][0]
            xminusz1=obj0dx.loc[i-1][0]
            yminusz2=obj0dy.loc[0][0]
            yminusz1=obj0dy.loc[i-1][0]
            startingobj=obj0.loc[i][0]
            

    print(myobjects,myobjecttipe)


    x_values = [xminusz2, xminusz1]
    y_values = [yminusz2, yminusz1]

    fig, ax = plt.subplots()

    i=1
    for i in range(5):
        
        
        #plt.xlim(-1000,1000)
        #plt.ylim(-1000,5000)
        plt.scatter(x_values,y_values, color='black')
        
    
        
        xvalt=x_values[i+1]-x_values[i]
        yvalt=y_values[i+1]-y_values[i]
        
        x_values.append(x_values[i+1]+xvalt)
        y_values.append(y_values[i+1]+yvalt)
        
        plt.scatter(x_values,y_values, color='blue')
        
        if(x_values[i]>=0.3 and x_values[i]<=2 and y_values[i]>0.8 and y_values[i] < 2.3):
            print(x_values[i], y_values[i])
        
        
        
        plt.pause(0.001)
        i=i+1
        

    
    #ax.add_patch(Rectangle((-0.3, 2.3), 2.3, 1.5))
    #ax.add_patch(Rectangle((-0.3, -0.8), 2.3, 1.5)) 
    
    plt.show()
    
    nnumber = number+1

import matplotlib.pyplot as plt 
import numpy as np
from sklearn.linear_model import LinearRegression
import random
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib.patches import Rectangle

df349 = pd.read_csv("/Users/timeanemet/Desktop/Bosch/SW Challenge 2022 - dataset/PSA_ADAS_W3_FC_2022-09-01_14-49_0054.MF4/Group_349.csv", sep=',') # sep argumentummal megadhatjuk az elválasztó karaktert
df349.head()


df349.columns = df349.columns.str.replace(
    '_g_Infrastructure_CCR_NET_NetRunnablesClass_m_rteInputData_out_local.TChangeableMemPool._._._m_arrayPool._0_._elem._m_',
    '')



#Melyik kamerát nézem

number = 0

while number != 15:


    variable = 1
    variable=str(variable)

    #Melyik oszlopot

    obj0 = df349[["camData._m_objects._m_value._"+variable+"_._m_objType"]]

    obj0dx = df349[["camData._m_objects._m_value._"+variable+"_._m_dx"]]
    obj0dy = df349[["camData._m_objects._m_value._"+variable+"_._m_dy"]]
    obj0vx = df349[["camData._m_objects._m_value._"+variable+"_._m_vx"]]
    obj0vy = df349[["camData._m_objects._m_value._"+variable+"_._m_vy"]]


    # elso objektum valtas
    object1 = 0
    myobjects=[object1]
    myobjecttipe=[obj0.loc[0][0]]

    startingobj = obj0.loc[object1][0]
    bejott=0

    for i in range(len(obj0)):

        if(obj0.loc[i][0] != startingobj):
            bejott=bejott+1
            myobjects.append(i)
            myobjecttipe.append(obj0.loc[i][0])
            print(""+ str(i) +"-ediknel van az elso valtas")
            print(""+ str(obj0.loc[i][0])+"-re valt " + str(obj0.loc[i-1][0])+"-rol")
            print(""+ str(obj0dx.loc[i][0])+" xd" + str(obj0dx.loc[i-1][0])+" xddd")
            
            
            xminusz2=obj0dx.loc[myobjects[bejott]][0]
            xminusz1=obj0dx.loc[i-1][0]
            yminusz2=obj0dy.loc[myobjects[bejott]][0]
            yminusz1=obj0dy.loc[i-1][0]
            
            
            startingobj=obj0.loc[i][0]
            
            
            

            print(myobjects,myobjecttipe)


            x_values = [xminusz2, xminusz1]
            y_values = [yminusz2, yminusz1]

            fig, ax = plt.subplots()

            i=1
            for i in range():
                
                
                plt.xlim(-50000,50000)
                plt.ylim(-50000,50000)
                plt.scatter(x_values,y_values, color='black')
                
            
                
                xvalt=x_values[i+1]-x_values[i]
                yvalt=y_values[i+1]-y_values[i]
                
                x_values.append(x_values[i+1]+xvalt)
                y_values.append(y_values[i+1]+yvalt)
                
                plt.scatter(x_values,y_values, color='blue')
                
                if(x_values[i]>=0.3 and x_values[i]<=2 and y_values[i]>0.8 and y_values[i] < 2.3):
                    print(x_values[i], y_values[i])
                
                
                
                plt.pause(0.001)
                i=i+1
                

            
            #ax.add_patch(Rectangle((-0.3, 2.3), 2.3, 1.5))
            #ax.add_patch(Rectangle((-0.3, -0.8), 2.3, 1.5)) 
            
            plt.show()
            
            nnumber = number+1

import matplotlib.pyplot as plt 
import numpy as np
from sklearn.linear_model import LinearRegression
import random
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib.patches import Rectangle

df349 = pd.read_csv("/Users/timeanemet/Desktop/Bosch/SW Challenge 2022 - dataset/PSA_ADAS_W3_FC_2022-09-01_14-49_0054.MF4/Group_349.csv", sep=',') # sep argumentummal megadhatjuk az elválasztó karaktert
df349.head()


df349.columns = df349.columns.str.replace(
    '_g_Infrastructure_CCR_NET_NetRunnablesClass_m_rteInputData_out_local.TChangeableMemPool._._._m_arrayPool._0_._elem._m_',
    '')



#Melyik kamerát nézem

number = 0

while number != 15:


    variable = 1
    variable=str(variable)

    #Melyik oszlopot

    obj0 = df349[["camData._m_objects._m_value._"+variable+"_._m_objType"]]

    obj0dx = df349[["camData._m_objects._m_value._"+variable+"_._m_dx"]]
    obj0dy = df349[["camData._m_objects._m_value._"+variable+"_._m_dy"]]
    obj0vx = df349[["camData._m_objects._m_value._"+variable+"_._m_vx"]]
    obj0vy = df349[["camData._m_objects._m_value._"+variable+"_._m_vy"]]


    # elso objektum valtas
    object1 = 0
    myobjects=[object1]
    myobjecttipe=[obj0.loc[0][0]]

    startingobj = obj0.loc[object1][0]
    bejott=0

    for i in range(len(obj0)):

        if(obj0.loc[i][0] != startingobj):
            bejott=bejott+1
            myobjects.append(i)
            myobjecttipe.append(obj0.loc[i][0])
            print(""+ str(i) +"-ediknel van az elso valtas")
            print(""+ str(obj0.loc[i][0])+"-re valt " + str(obj0.loc[i-1][0])+"-rol")
            print(""+ str(obj0dx.loc[i][0])+" xd" + str(obj0dx.loc[i-1][0])+" xddd")
            
            if(i<100):
                xminusz2=obj0dx.loc[myobjects[bejott]][0]
                yminusz2=obj0dy.loc[myobjects[bejott]][0]
            else:
                xminusz2=obj0dx.loc[i-100][0]
                yminusz2=obj0dy.loc[i-100][0] 
            
                
            xminusz1=obj0dx.loc[i-1][0]
            yminusz1=obj0dy.loc[i-1][0]
            
            
            startingobj=obj0.loc[i][0]
            
            
            

            print(myobjects,myobjecttipe)


            x_values = [xminusz2 ,xminusz1]
            y_values = [yminusz2, yminusz1]

            fig, ax = plt.subplots()

            
            rohadtonjecttipe = i
            for i in range(10):
                
                
                
                
                plt.xlim(-50000,50000)
                plt.ylim(-50000,50000)
                plt.scatter(x_values,y_values, color='black')
                
            
                
                xvalt=(x_values[i+1]-x_values[i])
                yvalt=(y_values[i+1]-y_values[i])
                
                x_values.append(x_values[i+1]+xvalt)
                y_values.append(y_values[i+1]+yvalt)
                
                plt.scatter(x_values,y_values, color='blue')
                
                if(x_values[i]>=0.3 and x_values[i]<=2 and y_values[i]>0.8 and y_values[i] < 2.3):
                    print(x_values[i], y_values[i])
                
                
                
                plt.title(variable)
                
                plt.pause(0.00001)
                i=i+1
                

            
            #ax.add_patch(Rectangle((-0.3, 2.3), 2.3, 1.5))
            #ax.add_patch(Rectangle((-0.3, -0.8), 2.3, 1.5)) 
            
            plt.show()
            
            nnumber = number+1

"""Mukodik elvileg a holtter meg ilyen dolgok amugy nem"""

# mar hogy itt

import matplotlib.pyplot as plt
import numpy as np
from sklearn.linear_model import LinearRegression
import random
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib
matplotlib.use('TkAgg')
from matplotlib.patches import Rectangle

df349 = pd.read_csv(
    "Group_349.csv",
    sep=',')  # sep argumentummal megadhatjuk az elválasztó karaktert
df349.head()

df349.columns = df349.columns.str.replace(
    '_g_Infrastructure_CCR_NET_NetRunnablesClass_m_rteInputData_out_local.TChangeableMemPool._._._m_arrayPool._0_._elem._m_',
    '')

# Melyik kamerát nézem

number = 0

while number != 15:

    variable = 1
    variable = str(variable)

    # Melyik oszlopot

    obj0 = df349[["camData._m_objects._m_value._" + variable + "_._m_objType"]]

    obj0dx = df349[["camData._m_objects._m_value._" + variable + "_._m_dx"]]
    obj0dy = df349[["camData._m_objects._m_value._" + variable + "_._m_dy"]]
    obj0vx = df349[["camData._m_objects._m_value._" + variable + "_._m_vx"]]
    obj0vy = df349[["camData._m_objects._m_value._" + variable + "_._m_vy"]]

    # elso objektum valtas
    object1 = 0
    myobjects = [object1]
    myobjecttipe = [obj0.loc[0][0]]

    startingobj = obj0.loc[object1][0]
    bejott = 0

    for i in range(len(obj0)):

        if (obj0.loc[i][0] != startingobj):
            bejott = bejott + 1
            myobjects.append(i)
            myobjecttipe.append(obj0.loc[i][0])
            print("" + str(i) + "-ediknel van az elso valtas")
            print("" + str(obj0.loc[i][0]) + "-re valt " + str(obj0.loc[i - 1][0]) + "-rol")
            print("" + str(obj0dx.loc[i][0]) + " xd" + str(obj0dx.loc[i - 1][0]) + " xddd")

            xminusz2 = obj0dx.loc[myobjects[bejott]][0]
            xminusz1 = obj0dx.loc[i - 1][0]
            yminusz2 = obj0dy.loc[myobjects[bejott]][0]
            yminusz1 = obj0dy.loc[i - 1][0]

            startingobj = obj0.loc[i][0]

            print(myobjects, myobjecttipe)

            x_values = [xminusz2/10000, xminusz1/10000]
            y_values = [yminusz2/10000, yminusz1/10000]

            fig, ax = plt.subplots()

            i = 1
            for i in range(10):

                plt.xlim(-5, 5)
                plt.ylim(-5, 5)
                # plt.scatter(x_values, y_values, color='black')


                xvalt = x_values[i + 1] - x_values[i]
                yvalt = y_values[i + 1] - y_values[i]



                x_values.append(x_values[i + 1] + xvalt)
                y_values.append(y_values[i + 1] + yvalt)

                ax.add_patch(Rectangle((-0.3, 2.3), 2.3, 1.5,color='yellow'))

                ax.add_patch(Rectangle((-0.3, -2.3), 2.3, 1.5,color='yellow'))

                print(""+str(x_values[i]) +" x  "+ str(y_values[i])+" y")

                if ((x_values[i] >= -0.3 and x_values[i] <= 2 and y_values[i] > 0.8 and y_values[i] < 2.3) or (x_values[i] >= -0.3 and x_values[i] <= 2 and y_values[i] > -2.3 and y_values[i] < -0.8)):
                    plt.scatter(x_values, y_values, color='red')
                else:
                    plt.scatter(x_values, y_values, color='green')
                #
                # if (x_values[i] >= 0.3 and x_values[i] <= 2 and y_values[i] > 0.8 and y_values[i] < 2.3):
                #     print(x_values[i], y_values[i])

                # ax.add_patch(Rectangle((-0.5, 0.8), 3, 1.4, color='blue'))

                plt.pause(0.001)
                i = i + 1



            plt.show()

            nnumber = number + 1